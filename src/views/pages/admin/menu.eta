<% layout("/layouts/base", { title: "Manage Menu", claims: it?.claims }) %>

<div class="max-w-4xl mx-auto p-6 min-h-screen" x-data="menuManager()" x-init="loadMenu">
    <h1 class="text-3xl font-bold mb-6 text-center font-grenze">Manage Menu Items</h1>
    
    <template x-if="loading">
        <div class="flex justify-center">
            <span class="loading loading-spinner text-primary"></span>
        </div>
    </template>

    <template x-if="!loading && menuItems.length === 0">
        <p class="text-center text-gray-500">No menu items found.</p>
    </template>

    <div class="grid gap-4" x-show="!loading">
        <template x-for="item in menuItems" :key="item.id">
            <div class="card bg-base-100 shadow-xl p-4">
                <div class="flex justify-between items-center">
                    <div class="flex items-center">
                        <img 
                            :src="item.imageurl" 
                            class="w-16 h-16 object-cover rounded-lg mr-4" 
                            :alt="item.name"
                        />
                        <div>
                            <h2 class="text-xl font-semibold" x-text="item.name"></h2>
                            <p x-text="`Price: ${item.price}â‚´`"></p>
                            <p x-text="`Portion: ${item.portion}g`"></p>
                            <p x-text="item.description"></p>
                        </div>
                    </div>
                    <div class="flex gap-2">
                        <a :href="'/admin/menu/edit/' + item.id" class="btn btn-primary">Edit</a>
                        <button 
                            class="btn btn-error" 
                            @click="deleteItem(item.id)"
                        >Delete</button>
                    </div>
                </div>
            </div>
        </template>
    </div>
    <div class="mt-6 text-center">
        <a href="/admin/menu/add" class="btn btn-primary">Add New Menu Item</a>
    </div>
</div>

<script>
    function menuManager() {
        return {
            menuItems: [],
            loading: true,
            async loadMenu() {
                this.loading = true;
                try {
                    const res = await fetch("/api/menu", {
                        headers: {
                            "Content-Type": "application/json"
                        }
                    });
                    if (!res.ok) throw new Error("Failed to fetch menu");
                    this.menuItems = await res.json();
                } catch (err) {
                    console.error("Failed to load menu", err);
                    this.menuItems = [];
                } finally {
                    this.loading = false;
                }
            },
            async deleteItem(id) {
                if (!confirm("Are you sure you want to delete this menu item?")) return;
                try {
                    const res = await fetch(`/api/menu/item/${id}`, {
                        method: "DELETE",
                        headers: {
                            "Content-Type": "application/json"
                        }
                    });
                    if (!res.ok) throw new Error("Failed to delete item");
                    this.menuItems = this.menuItems.filter(item => item.id !== id);
                    alert("Menu item deleted successfully!");
                } catch (err) {
                    console.error("Delete error:", err);
                    alert("Failed to delete menu item.");
                }
            }
        };
    }
</script>
