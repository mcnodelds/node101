<% layout("/layouts/base", { title: "Register" }) %>

<div class="min-h-screen flex items-center justify-center p-4">
    <div class="max-w-md w-full bg-base-200 rounded-lg shadow-lg p-8">
        <h2 class="text-3xl font-bold text-center mb-6 font-grenze">Register</h2>
        <form id="register-form">

            <div class="mb-4">
                <label for="username" class="block text-sm font-medium mb-2">Username</label>
                <input
                    type="text"
                    id="username"
                    name="username" <% /* Important: 'name' attribute must match schema */ %>
                    required
                    minlength="3" <% /* Match schema validation */ %>
                    maxlength="32" <% /* Match schema validation */ %>
                    class="input input-bordered w-full"
                    placeholder="Choose a username (3-32 chars)"
                />
            </div>

            <div class="mb-4">
                <label for="email" class="block text-sm font-medium mb-2">Email</label>
                <input
                    type="email"
                    id="email"
                    name="email"
                    required
                    class="input input-bordered w-full"
                    placeholder="your@email.com"
                />
            </div>
            <div class="mb-4">
                <label for="password" class="block text-sm font-medium mb-2">Password</label>
                <input
                    type="password"
                    id="password"
                    name="password"
                    required
                    minlength="6"  <% /* Updated placeholder based on schema */ %>
                    class="input input-bordered w-full"
                    placeholder="Create a password (min 6 chars)"
                />
            </div>
            <div class="mb-6">
                 <label for="confirmPassword" class="block text-sm font-medium mb-2">Confirm Password</label>
                <input
                    type="password"
                    id="confirmPassword"
                    name="confirmPassword"
                    required
                    class="input input-bordered w-full"
                    placeholder="Confirm your password"
                />
            </div>
            <div class="mb-6">
                <button type="submit" class="btn btn-primary w-full">Register</button>
            </div>

            <div id="error-message" class="alert alert-error alert-soft text-center hidden"></div>
            <div id="success-message" class="alert alert-success alert-soft text-center hidden"></div>

            <p class="text-center text-sm">
                Already have an account?
                <a href="/user/login" class="link link-hover link-secondary">Login here</a>
            </p>
        </form>
    </div>
</div>

<script>
    const registerForm = document.getElementById("register-form");
    const errorMessageDiv = document.getElementById("error-message");
    const successMessageDiv = document.getElementById("success-message");
    const passwordInput = document.getElementById("password");
    const confirmPasswordInput = document.getElementById("confirmPassword");


    registerForm.addEventListener("submit", async (event) => {
        event.preventDefault();
        errorMessageDiv.classList.add("hidden");
        successMessageDiv.classList.add("hidden");
        errorMessageDiv.textContent = '';
        successMessageDiv.textContent = '';


        if (passwordInput.value !== confirmPasswordInput.value) {
            errorMessageDiv.textContent = 'Passwords do not match.';
            errorMessageDiv.classList.remove("hidden");
            return;
        }

        const formData = new FormData(registerForm);
        formData.delete('confirmPassword');
        const data = Object.fromEntries(formData.entries());


        try {
            const response = await fetch('/api/auth/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                credentials: 'same-origin',
                body: JSON.stringify(data),
            });

            const result = await response.json();

            if (response.ok && result.token) {
                successMessageDiv.textContent = "Success!";
                successMessageDiv.classList.remove("hidden");
                localStorage.setItem('authToken', result.token);
                window.location.pathname = "/";
            } else {
                errorMessageDiv.textContent = result.message
                    || 'Registration failed. Please try again.';
                errorMessageDiv.classList.remove("hidden");
            }
        } catch (error) {
            console.error('Registration error:', error);
            errorMessageDiv.textContent = 'An error occurred during registration. Please try again.';
            errorMessageDiv.classList.remove("hidden");
        }
    });
</script>
